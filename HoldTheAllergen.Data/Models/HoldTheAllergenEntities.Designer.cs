//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("HoldTheAllergenModel", "FK_MenuItems_Restaurant", "Restaurants", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HoldTheAllergen.Data.Models.Restaurant), "MenuItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HoldTheAllergen.Data.Models.MenuItem), true)]
[assembly: EdmRelationshipAttribute("HoldTheAllergenModel", "FK_Restaurants_RestaurantCategories", "RestaurantCategories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HoldTheAllergen.Data.Models.RestaurantCategory), "Restaurants", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HoldTheAllergen.Data.Models.Restaurant), true)]
[assembly: EdmRelationshipAttribute("HoldTheAllergenModel", "FK_RestaurantIngredients_Restaurant", "Restaurants", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HoldTheAllergen.Data.Models.Restaurant), "RestaurantIngredients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HoldTheAllergen.Data.Models.RestaurantIngredient), true)]
[assembly: EdmRelationshipAttribute("HoldTheAllergenModel", "FK_RestaurantLocations_Restaurants", "Restaurants", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HoldTheAllergen.Data.Models.Restaurant), "RestaurantLocations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HoldTheAllergen.Data.Models.RestaurantLocation), true)]
[assembly: EdmRelationshipAttribute("HoldTheAllergenModel", "MenuItemIngredients", "RestaurantIngredients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HoldTheAllergen.Data.Models.RestaurantIngredient), "MenuItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HoldTheAllergen.Data.Models.MenuItem))]
[assembly: EdmRelationshipAttribute("HoldTheAllergenModel", "RestaurantIngredientAllergens", "Allergens", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HoldTheAllergen.Data.Models.Allergen), "RestaurantIngredients", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HoldTheAllergen.Data.Models.RestaurantIngredient))]
[assembly: EdmRelationshipAttribute("HoldTheAllergenModel", "FK_UserStarredMenuItems_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HoldTheAllergen.Data.Models.User), "UserStarredMenuItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HoldTheAllergen.Data.Models.UserStarredMenuItem), true)]
[assembly: EdmRelationshipAttribute("HoldTheAllergenModel", "UserAllergies", "Allergen", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HoldTheAllergen.Data.Models.Allergen), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HoldTheAllergen.Data.Models.User))]

#endregion

namespace HoldTheAllergen.Data.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class HoldTheAllergenEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new HoldTheAllergenEntities object using the connection string found in the 'HoldTheAllergenEntities' section of the application configuration file.
        /// </summary>
        public HoldTheAllergenEntities() : base("name=HoldTheAllergenEntities", "HoldTheAllergenEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HoldTheAllergenEntities object.
        /// </summary>
        public HoldTheAllergenEntities(string connectionString) : base(connectionString, "HoldTheAllergenEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new HoldTheAllergenEntities object.
        /// </summary>
        public HoldTheAllergenEntities(EntityConnection connection) : base(connection, "HoldTheAllergenEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Allergen> Allergens
        {
            get
            {
                if ((_Allergens == null))
                {
                    _Allergens = base.CreateObjectSet<Allergen>("Allergens");
                }
                return _Allergens;
            }
        }
        private ObjectSet<Allergen> _Allergens;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MenuItem> MenuItems
        {
            get
            {
                if ((_MenuItems == null))
                {
                    _MenuItems = base.CreateObjectSet<MenuItem>("MenuItems");
                }
                return _MenuItems;
            }
        }
        private ObjectSet<MenuItem> _MenuItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RestaurantCategory> RestaurantCategories
        {
            get
            {
                if ((_RestaurantCategories == null))
                {
                    _RestaurantCategories = base.CreateObjectSet<RestaurantCategory>("RestaurantCategories");
                }
                return _RestaurantCategories;
            }
        }
        private ObjectSet<RestaurantCategory> _RestaurantCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RestaurantIngredient> RestaurantIngredients
        {
            get
            {
                if ((_RestaurantIngredients == null))
                {
                    _RestaurantIngredients = base.CreateObjectSet<RestaurantIngredient>("RestaurantIngredients");
                }
                return _RestaurantIngredients;
            }
        }
        private ObjectSet<RestaurantIngredient> _RestaurantIngredients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RestaurantLocation> RestaurantLocations
        {
            get
            {
                if ((_RestaurantLocations == null))
                {
                    _RestaurantLocations = base.CreateObjectSet<RestaurantLocation>("RestaurantLocations");
                }
                return _RestaurantLocations;
            }
        }
        private ObjectSet<RestaurantLocation> _RestaurantLocations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Restaurant> Restaurants
        {
            get
            {
                if ((_Restaurants == null))
                {
                    _Restaurants = base.CreateObjectSet<Restaurant>("Restaurants");
                }
                return _Restaurants;
            }
        }
        private ObjectSet<Restaurant> _Restaurants;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserStarredMenuItem> UserStarredMenuItems
        {
            get
            {
                if ((_UserStarredMenuItems == null))
                {
                    _UserStarredMenuItems = base.CreateObjectSet<UserStarredMenuItem>("UserStarredMenuItems");
                }
                return _UserStarredMenuItems;
            }
        }
        private ObjectSet<UserStarredMenuItem> _UserStarredMenuItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Allergens EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAllergens(Allergen allergen)
        {
            base.AddObject("Allergens", allergen);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MenuItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMenuItems(MenuItem menuItem)
        {
            base.AddObject("MenuItems", menuItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RestaurantCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRestaurantCategories(RestaurantCategory restaurantCategory)
        {
            base.AddObject("RestaurantCategories", restaurantCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RestaurantIngredients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRestaurantIngredients(RestaurantIngredient restaurantIngredient)
        {
            base.AddObject("RestaurantIngredients", restaurantIngredient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RestaurantLocations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRestaurantLocations(RestaurantLocation restaurantLocation)
        {
            base.AddObject("RestaurantLocations", restaurantLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Restaurants EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRestaurants(Restaurant restaurant)
        {
            base.AddObject("Restaurants", restaurant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserStarredMenuItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserStarredMenuItems(UserStarredMenuItem userStarredMenuItem)
        {
            base.AddObject("UserStarredMenuItems", userStarredMenuItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HoldTheAllergenModel", Name="Allergen")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Allergen : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Allergen object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        public static Allergen CreateAllergen(global::System.Int32 id, global::System.String name, global::System.String description, global::System.DateTime dateAdded)
        {
            Allergen allergen = new Allergen();
            allergen.Id = id;
            allergen.Name = name;
            allergen.Description = description;
            allergen.DateAdded = dateAdded;
            return allergen;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "RestaurantIngredientAllergens", "RestaurantIngredients")]
        public EntityCollection<RestaurantIngredient> Ingredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RestaurantIngredient>("HoldTheAllergenModel.RestaurantIngredientAllergens", "RestaurantIngredients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RestaurantIngredient>("HoldTheAllergenModel.RestaurantIngredientAllergens", "RestaurantIngredients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "UserAllergies", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("HoldTheAllergenModel.UserAllergies", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("HoldTheAllergenModel.UserAllergies", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HoldTheAllergenModel", Name="MenuItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MenuItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MenuItem object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="restaurantId">Initial value of the RestaurantId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        public static MenuItem CreateMenuItem(global::System.Int32 id, global::System.Int32 restaurantId, global::System.String name, global::System.DateTime dateAdded)
        {
            MenuItem menuItem = new MenuItem();
            menuItem.Id = id;
            menuItem.RestaurantId = restaurantId;
            menuItem.Name = name;
            menuItem.DateAdded = dateAdded;
            return menuItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RestaurantId
        {
            get
            {
                return _RestaurantId;
            }
            set
            {
                OnRestaurantIdChanging(value);
                ReportPropertyChanging("RestaurantId");
                _RestaurantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestaurantId");
                OnRestaurantIdChanged();
            }
        }
        private global::System.Int32 _RestaurantId;
        partial void OnRestaurantIdChanging(global::System.Int32 value);
        partial void OnRestaurantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UrlSlug
        {
            get
            {
                return _UrlSlug;
            }
            set
            {
                OnUrlSlugChanging(value);
                ReportPropertyChanging("UrlSlug");
                _UrlSlug = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UrlSlug");
                OnUrlSlugChanged();
            }
        }
        private global::System.String _UrlSlug;
        partial void OnUrlSlugChanging(global::System.String value);
        partial void OnUrlSlugChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "FK_MenuItems_Restaurant", "Restaurants")]
        public Restaurant Restaurant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("HoldTheAllergenModel.FK_MenuItems_Restaurant", "Restaurants").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("HoldTheAllergenModel.FK_MenuItems_Restaurant", "Restaurants").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Restaurant> RestaurantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("HoldTheAllergenModel.FK_MenuItems_Restaurant", "Restaurants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Restaurant>("HoldTheAllergenModel.FK_MenuItems_Restaurant", "Restaurants", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "MenuItemIngredients", "RestaurantIngredients")]
        public EntityCollection<RestaurantIngredient> Ingredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RestaurantIngredient>("HoldTheAllergenModel.MenuItemIngredients", "RestaurantIngredients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RestaurantIngredient>("HoldTheAllergenModel.MenuItemIngredients", "RestaurantIngredients", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HoldTheAllergenModel", Name="Restaurant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Restaurant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Restaurant object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="logo">Initial value of the Logo property.</param>
        /// <param name="urlSlug">Initial value of the UrlSlug property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        public static Restaurant CreateRestaurant(global::System.Int32 id, global::System.String categoryName, global::System.String name, global::System.String logo, global::System.String urlSlug, global::System.DateTime dateAdded)
        {
            Restaurant restaurant = new Restaurant();
            restaurant.Id = id;
            restaurant.CategoryName = categoryName;
            restaurant.Name = name;
            restaurant.Logo = logo;
            restaurant.UrlSlug = urlSlug;
            restaurant.DateAdded = dateAdded;
            return restaurant;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Logo
        {
            get
            {
                return _Logo;
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.String _Logo;
        partial void OnLogoChanging(global::System.String value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UrlSlug
        {
            get
            {
                return _UrlSlug;
            }
            set
            {
                OnUrlSlugChanging(value);
                ReportPropertyChanging("UrlSlug");
                _UrlSlug = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UrlSlug");
                OnUrlSlugChanged();
            }
        }
        private global::System.String _UrlSlug;
        partial void OnUrlSlugChanging(global::System.String value);
        partial void OnUrlSlugChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "FK_MenuItems_Restaurant", "MenuItems")]
        public EntityCollection<MenuItem> MenuItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuItem>("HoldTheAllergenModel.FK_MenuItems_Restaurant", "MenuItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuItem>("HoldTheAllergenModel.FK_MenuItems_Restaurant", "MenuItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "FK_Restaurants_RestaurantCategories", "RestaurantCategories")]
        public RestaurantCategory Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RestaurantCategory>("HoldTheAllergenModel.FK_Restaurants_RestaurantCategories", "RestaurantCategories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RestaurantCategory>("HoldTheAllergenModel.FK_Restaurants_RestaurantCategories", "RestaurantCategories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RestaurantCategory> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RestaurantCategory>("HoldTheAllergenModel.FK_Restaurants_RestaurantCategories", "RestaurantCategories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RestaurantCategory>("HoldTheAllergenModel.FK_Restaurants_RestaurantCategories", "RestaurantCategories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "FK_RestaurantIngredients_Restaurant", "RestaurantIngredients")]
        public EntityCollection<RestaurantIngredient> Ingredients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RestaurantIngredient>("HoldTheAllergenModel.FK_RestaurantIngredients_Restaurant", "RestaurantIngredients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RestaurantIngredient>("HoldTheAllergenModel.FK_RestaurantIngredients_Restaurant", "RestaurantIngredients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "FK_RestaurantLocations_Restaurants", "RestaurantLocations")]
        public EntityCollection<RestaurantLocation> Locations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RestaurantLocation>("HoldTheAllergenModel.FK_RestaurantLocations_Restaurants", "RestaurantLocations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RestaurantLocation>("HoldTheAllergenModel.FK_RestaurantLocations_Restaurants", "RestaurantLocations", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HoldTheAllergenModel", Name="RestaurantCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RestaurantCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RestaurantCategory object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="icon">Initial value of the Icon property.</param>
        public static RestaurantCategory CreateRestaurantCategory(global::System.String name, global::System.String icon)
        {
            RestaurantCategory restaurantCategory = new RestaurantCategory();
            restaurantCategory.Name = name;
            restaurantCategory.Icon = icon;
            return restaurantCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Icon
        {
            get
            {
                return _Icon;
            }
            set
            {
                OnIconChanging(value);
                ReportPropertyChanging("Icon");
                _Icon = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Icon");
                OnIconChanged();
            }
        }
        private global::System.String _Icon;
        partial void OnIconChanging(global::System.String value);
        partial void OnIconChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "FK_Restaurants_RestaurantCategories", "Restaurants")]
        public EntityCollection<Restaurant> Restaurants
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Restaurant>("HoldTheAllergenModel.FK_Restaurants_RestaurantCategories", "Restaurants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Restaurant>("HoldTheAllergenModel.FK_Restaurants_RestaurantCategories", "Restaurants", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HoldTheAllergenModel", Name="RestaurantIngredient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RestaurantIngredient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RestaurantIngredient object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="restaurantId">Initial value of the RestaurantId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        public static RestaurantIngredient CreateRestaurantIngredient(global::System.Int32 id, global::System.Int32 restaurantId, global::System.String name, global::System.DateTime dateAdded)
        {
            RestaurantIngredient restaurantIngredient = new RestaurantIngredient();
            restaurantIngredient.Id = id;
            restaurantIngredient.RestaurantId = restaurantId;
            restaurantIngredient.Name = name;
            restaurantIngredient.DateAdded = dateAdded;
            return restaurantIngredient;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RestaurantId
        {
            get
            {
                return _RestaurantId;
            }
            set
            {
                OnRestaurantIdChanging(value);
                ReportPropertyChanging("RestaurantId");
                _RestaurantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestaurantId");
                OnRestaurantIdChanged();
            }
        }
        private global::System.Int32 _RestaurantId;
        partial void OnRestaurantIdChanging(global::System.Int32 value);
        partial void OnRestaurantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "FK_RestaurantIngredients_Restaurant", "Restaurants")]
        public Restaurant Restaurant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("HoldTheAllergenModel.FK_RestaurantIngredients_Restaurant", "Restaurants").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("HoldTheAllergenModel.FK_RestaurantIngredients_Restaurant", "Restaurants").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Restaurant> RestaurantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("HoldTheAllergenModel.FK_RestaurantIngredients_Restaurant", "Restaurants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Restaurant>("HoldTheAllergenModel.FK_RestaurantIngredients_Restaurant", "Restaurants", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "MenuItemIngredients", "MenuItems")]
        public EntityCollection<MenuItem> MenuItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MenuItem>("HoldTheAllergenModel.MenuItemIngredients", "MenuItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MenuItem>("HoldTheAllergenModel.MenuItemIngredients", "MenuItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "RestaurantIngredientAllergens", "Allergens")]
        public EntityCollection<Allergen> Allergens
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Allergen>("HoldTheAllergenModel.RestaurantIngredientAllergens", "Allergens");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Allergen>("HoldTheAllergenModel.RestaurantIngredientAllergens", "Allergens", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HoldTheAllergenModel", Name="RestaurantLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RestaurantLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RestaurantLocation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="restaurantId">Initial value of the RestaurantId property.</param>
        /// <param name="lat">Initial value of the Lat property.</param>
        /// <param name="lng">Initial value of the Lng property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="dateAdded">Initial value of the DateAdded property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        public static RestaurantLocation CreateRestaurantLocation(global::System.Int32 id, global::System.Int32 restaurantId, global::System.Double lat, global::System.Double lng, global::System.String phoneNumber, global::System.DateTime dateAdded, global::System.String source)
        {
            RestaurantLocation restaurantLocation = new RestaurantLocation();
            restaurantLocation.Id = id;
            restaurantLocation.RestaurantId = restaurantId;
            restaurantLocation.Lat = lat;
            restaurantLocation.Lng = lng;
            restaurantLocation.PhoneNumber = phoneNumber;
            restaurantLocation.DateAdded = dateAdded;
            restaurantLocation.Source = source;
            return restaurantLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RestaurantId
        {
            get
            {
                return _RestaurantId;
            }
            set
            {
                OnRestaurantIdChanging(value);
                ReportPropertyChanging("RestaurantId");
                _RestaurantId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RestaurantId");
                OnRestaurantIdChanged();
            }
        }
        private global::System.Int32 _RestaurantId;
        partial void OnRestaurantIdChanging(global::System.Int32 value);
        partial void OnRestaurantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lat
        {
            get
            {
                return _Lat;
            }
            set
            {
                OnLatChanging(value);
                ReportPropertyChanging("Lat");
                _Lat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lat");
                OnLatChanged();
            }
        }
        private global::System.Double _Lat;
        partial void OnLatChanging(global::System.Double value);
        partial void OnLatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Lng
        {
            get
            {
                return _Lng;
            }
            set
            {
                OnLngChanging(value);
                ReportPropertyChanging("Lng");
                _Lng = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lng");
                OnLngChanged();
            }
        }
        private global::System.Double _Lng;
        partial void OnLngChanging(global::System.Double value);
        partial void OnLngChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetNumber
        {
            get
            {
                return _StreetNumber;
            }
            set
            {
                OnStreetNumberChanging(value);
                ReportPropertyChanging("StreetNumber");
                _StreetNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StreetNumber");
                OnStreetNumberChanged();
            }
        }
        private global::System.String _StreetNumber;
        partial void OnStreetNumberChanging(global::System.String value);
        partial void OnStreetNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetName
        {
            get
            {
                return _StreetName;
            }
            set
            {
                OnStreetNameChanging(value);
                ReportPropertyChanging("StreetName");
                _StreetName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StreetName");
                OnStreetNameChanged();
            }
        }
        private global::System.String _StreetName;
        partial void OnStreetNameChanging(global::System.String value);
        partial void OnStreetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProvinceCode
        {
            get
            {
                return _ProvinceCode;
            }
            set
            {
                OnProvinceCodeChanging(value);
                ReportPropertyChanging("ProvinceCode");
                _ProvinceCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProvinceCode");
                OnProvinceCodeChanged();
            }
        }
        private global::System.String _ProvinceCode;
        partial void OnProvinceCodeChanging(global::System.String value);
        partial void OnProvinceCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateAdded
        {
            get
            {
                return _DateAdded;
            }
            set
            {
                OnDateAddedChanging(value);
                ReportPropertyChanging("DateAdded");
                _DateAdded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAdded");
                OnDateAddedChanged();
            }
        }
        private global::System.DateTime _DateAdded;
        partial void OnDateAddedChanging(global::System.DateTime value);
        partial void OnDateAddedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "FK_RestaurantLocations_Restaurants", "Restaurants")]
        public Restaurant Restaurant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("HoldTheAllergenModel.FK_RestaurantLocations_Restaurants", "Restaurants").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("HoldTheAllergenModel.FK_RestaurantLocations_Restaurants", "Restaurants").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Restaurant> RestaurantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Restaurant>("HoldTheAllergenModel.FK_RestaurantLocations_Restaurants", "Restaurants");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Restaurant>("HoldTheAllergenModel.FK_RestaurantLocations_Restaurants", "Restaurants", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HoldTheAllergenModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastActivity">Initial value of the LastActivity property.</param>
        public static User CreateUser(global::System.Guid id, global::System.DateTime createDate, global::System.DateTime lastActivity)
        {
            User user = new User();
            user.Id = id;
            user.CreateDate = createDate;
            user.LastActivity = lastActivity;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivity
        {
            get
            {
                return _LastActivity;
            }
            set
            {
                OnLastActivityChanging(value);
                ReportPropertyChanging("LastActivity");
                _LastActivity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivity");
                OnLastActivityChanged();
            }
        }
        private global::System.DateTime _LastActivity;
        partial void OnLastActivityChanging(global::System.DateTime value);
        partial void OnLastActivityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "FK_UserStarredMenuItems_Users", "UserStarredMenuItem")]
        public EntityCollection<UserStarredMenuItem> StarredMenuItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserStarredMenuItem>("HoldTheAllergenModel.FK_UserStarredMenuItems_Users", "UserStarredMenuItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserStarredMenuItem>("HoldTheAllergenModel.FK_UserStarredMenuItems_Users", "UserStarredMenuItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "UserAllergies", "Allergen")]
        public EntityCollection<Allergen> Allergies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Allergen>("HoldTheAllergenModel.UserAllergies", "Allergen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Allergen>("HoldTheAllergenModel.UserAllergies", "Allergen", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="HoldTheAllergenModel", Name="UserStarredMenuItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserStarredMenuItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserStarredMenuItem object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="menuItemId">Initial value of the MenuItemId property.</param>
        /// <param name="restaurantId">Initial value of the RestaurantId property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static UserStarredMenuItem CreateUserStarredMenuItem(global::System.Guid userId, global::System.Int32 menuItemId, global::System.Int32 restaurantId, global::System.DateTime createDate)
        {
            UserStarredMenuItem userStarredMenuItem = new UserStarredMenuItem();
            userStarredMenuItem.UserId = userId;
            userStarredMenuItem.MenuItemId = menuItemId;
            userStarredMenuItem.RestaurantId = restaurantId;
            userStarredMenuItem.CreateDate = createDate;
            return userStarredMenuItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuItemId
        {
            get
            {
                return _MenuItemId;
            }
            set
            {
                if (_MenuItemId != value)
                {
                    OnMenuItemIdChanging(value);
                    ReportPropertyChanging("MenuItemId");
                    _MenuItemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MenuItemId");
                    OnMenuItemIdChanged();
                }
            }
        }
        private global::System.Int32 _MenuItemId;
        partial void OnMenuItemIdChanging(global::System.Int32 value);
        partial void OnMenuItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RestaurantId
        {
            get
            {
                return _RestaurantId;
            }
            set
            {
                if (_RestaurantId != value)
                {
                    OnRestaurantIdChanging(value);
                    ReportPropertyChanging("RestaurantId");
                    _RestaurantId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RestaurantId");
                    OnRestaurantIdChanged();
                }
            }
        }
        private global::System.Int32 _RestaurantId;
        partial void OnRestaurantIdChanging(global::System.Int32 value);
        partial void OnRestaurantIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("HoldTheAllergenModel", "FK_UserStarredMenuItems_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HoldTheAllergenModel.FK_UserStarredMenuItems_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HoldTheAllergenModel.FK_UserStarredMenuItems_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("HoldTheAllergenModel.FK_UserStarredMenuItems_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("HoldTheAllergenModel.FK_UserStarredMenuItems_Users", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
